class Solution {
    public int maxSubArrayLen(int[] nums, int k) {
        int presum = 0;
        int res = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i ++) {
            presum += nums[i];
            
            // If presum from index 0 to index i equals to k, it must be the largest sub array so far
            // so we update the res
            if (presum == k) {
                res = i + 1;
            } 
            
            if (map.containsKey(presum - k)) {
                res = Math.max(res, i - map.get(presum - k));
            }
            
            if (!map.containsKey(presum)) {
                map.put(presum, i);
            }
        }
        
        return res;
    }
}

class TwoSum {
    
    private Map<Integer, Integer> hashMap;

    /** Initialize your data structure here. */
    public TwoSum() {
       this.hashMap = new HashMap<>(); 
    }
    
    /** Add the number to an internal data structure.. */
    public void add(int number) {
        if (hashMap.containsKey(number)) {
            hashMap.put(number, hashMap.get(number) + 1);
        }
        else hashMap.put(number, 1);
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    public boolean find(int value) {
        
        for (Map.Entry<Integer, Integer> entry : hashMap.entrySet()) {
          int complement = value - entry.getKey();
          if (complement != entry.getKey()) {
            if (hashMap.containsKey(complement))
              return true;
          } else {
            if (entry.getValue() > 1)
              return true;
          }     
        }
        
        return false;
    }
}

/**
 * Your TwoSum object will be instantiated and called as such:
 * TwoSum obj = new TwoSum();
 * obj.add(number);
 * boolean param_2 = obj.find(value);
 */
